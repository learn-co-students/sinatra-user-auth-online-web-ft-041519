
class ApplicationController < Sinatra::Base
  register Sinatra::ActiveRecordExtension
  set :views, Proc.new { File.join(root, "../views/") }

  configure do  #allows data to persist
    enable :sessions
    set :session_secret, "secret"
  end

  get '/' do
    erb :home
  end

  get '/registrations/signup' do  #--------------- render the sign-up form view which can be found in app/views/registrations/signup.erb

    erb :'/registrations/signup'
  end

  post '/registrations' do        #--------------- responsible for handling the POST request that is sent when a user hits 'submit' on the sign-up form.
    @user = User.new(name: params["name"], email: params["email"], password: params["password"]) # 1. gets the new user's info from the params hash
    @user.save                                                                                   # 2. creates/saves a new user
    session[:user_id] = @user.id                                                                 # 3. signs them in with autogenerated id from database

    redirect '/users/home'                                                                       # 4. redirects them somewhere else
  end

  get '/sessions/login' do      #--------------- responsible for rendering the login form view page in app/views/sessions/login.erb

    erb :'sessions/login'
  end

  post '/sessions' do           #--------------- responsible for receiving the POST request that gets sent when a user hits 'submit' on the login form
    @user = User.find_by(email: params[:email], password: params[:password]) # 1. grabs the user's info from the params hash
    if @user                                                                 # 2. looks to match that info against the existing entries in the user database
      session[:user_id] = @user.id
      redirect '/users/home'                                                 # 3. if a matching entry is found, signs the user in
    end
    redirect '/sessions/login'
  end

  get '/sessions/logout' do      #--------------- responsible for logging the user out by clearing the session hash.
    session.clear
    redirect '/'
  end

  get '/users/home' do          #--------------- responsible for rendering the user's homepage view.

    @user = User.find(session[:user_id])
    erb :'/users/home'
  end
end
